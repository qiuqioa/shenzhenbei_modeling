% 定义观测点的坐标和目标点到观测点的距离
observed_points = [
    110.2410*97.304, 27.2040*111.263, 0.8240;
    110.7800*97.304, 27.4560*111.263, 0.7270;
    110.7120*97.304, 27.7850*111.263, 0.7420;
    110.2510*97.304, 27.8250*111.263, 0.8500;
    110.5240*97.304, 27.6170*111.263, 0.7860;
    110.4670*97.304, 27.9210*111.263, 0.6780;
    110.0470*97.304, 27.1210*111.263, 0.5750
];

% 目标点到观测点的距离
times_reached=[100.7670;112.2200;188.0200;258.9850;118.4430;266.8710;163.0240];
% 通过音爆时间算出观测点和目标点的距离
distances = times_reached.*0.3400;

% 定义目标函数
fun = @(x) sum((sqrt(sum((observed_points - x(1:3)).^2, 2)) - distances).^2);

% 设置遗传算法的参数
options = optimoptions('ga', 'Display', 'iter');
options.MaxGenerations=500;

% 设置参数的上下界
lb = [10636.1540; 2927.1230; 0]; % 下界
ub = [10817.6260; 3108.0030; 100.0]; % 上界

% 使用遗传算法求解最小化问题
format long;
[x_opt, ~, ~, output] = ga(fun, 3, [], [], [], [], lb, ub, [], options);

disp('目标点坐标：');
disp(x_opt);

disp('遗传算法输出信息：');
disp(output);

